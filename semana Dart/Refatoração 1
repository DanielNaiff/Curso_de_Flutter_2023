
# o principal problema é a questão de várias estruturas similares repetidas. A legibilidade do código poderia ser resolvida
# colocando esses widgets em classes

import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:visibility_detector/visibility_detector.dart';

import '../models/state_menu.dart';

class SkillsKnowledgeSection extends StatelessWidget {
  const SkillsKnowledgeSection({super.key});

  static final skill = [
    "Desenvolvimento Front-end",
    "Desenvolvimento Back-end",
    "Banco de Dados",
    "Controle de Versão",
    "Resolução de Problemas e Depuração",
  ];

  static final knowledge = [
    "Arquitetura de Aplicativos Web",
    "Segurança Web",
    "Infraestrutura em Nuvem",
    "Testes e Automação",
    "Boas Práticas de Desenvolvimento",
  ];

  @override
  Widget build(BuildContext context) {
    Size size = MediaQuery.of(context).size;
    return VisibilityDetector(
      key: const Key("Section 3"),
      onVisibilityChanged: (visibilityInfo) {
        if (visibilityInfo.visibleFraction >= 0.6) {
          context.read<StateMenu>().changeSelectedSection(3);
        }
      },
      child: Container(
        color: Colors.white70,
        child: Stack(
          children: [
            Row(
              children: [
# ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// esses blocos poderiam ser colocados em uma mesma classe
                SizedBox(
                  width: size.width * 0.48,
                  height: size.height,
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.end,
                    crossAxisAlignment: CrossAxisAlignment.end,
                    children: [
                      Container(
                        margin: const EdgeInsets.all(50),
                        child: Transform.rotate(
                          angle: 45 * 3.1415927 / 180,
                          child: Container(
                            color: Colors.red[200],
                            width: 100,
                            height: 100,
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
                SizedBox(
                  width: size.width * 0.4,
                  height: size.height,
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      CircleAvatar(
                        radius: 250,
                        backgroundColor: Colors.red[200],
                      )
                    ],
                  ),
                ),
                SizedBox(
                  width: size.width * 0.12,
                  height: size.height,
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.start,
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      Container(
                        margin: const EdgeInsets.all(50),
                        child: CircleAvatar(
                          radius: 20,
                          backgroundColor: Colors.red[200],
                        ),
                      )
                    ],
                  ),
                ),
              ],
            ),
# //////////////////////////////////////
            Container(
              padding: EdgeInsets.all(size.aspectRatio * 15),
              height: size.height,
              width: size.width,
              child: Column(
                children: [
                  Expanded(
                    flex: 2,
                    child: Row(
                      children: [
                        const Expanded(
                            flex: 1,
                            child: Text(
                              "Conhecimentos | Habilidades",
                              textAlign: TextAlign.start,
                              style: TextStyle(
                                  color: Colors.black,
                                  fontStyle: FontStyle.italic,
                                  fontWeight: FontWeight.bold,
                                  fontSize: 50),
                            )),
                        Expanded(flex: 1, child: Container()),
                      ],
                    ),
                  ),
# ////////////////////////////////blocos com uma estrutura muito similar, também poderiam ser colocados em uma mesma classe
                  Expanded(
                    flex: 8,
                    child: Row(
                      children: [
                        Expanded(
                          flex: 4,
                          child: Center(
                            child: Container(
                              margin: EdgeInsets.all(size.aspectRatio * 50),
                              child: ListView.builder(
                                shrinkWrap: true,
                                itemCount: skill.length,
                                itemBuilder: (context, index) => Container(
                                  width: size.width * 0.1,
                                  padding: const EdgeInsets.all(8.0),
                                  margin: EdgeInsets.all(size.aspectRatio * 8),
                                  color: Colors.red[400],
                                  child: Center(
                                    child: Text(
                                      skill[index],
                                      style:
                                          const TextStyle(color: Colors.black),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        Expanded(
                          flex: 1,
                          child: Center(
                            child: Container(
                              margin: EdgeInsets.fromLTRB(
                                  0, size.height * 0.05, 0, size.height * 0.12),
                              color: Colors.black,
                              width: size.width * 0.005,
                            ),
                          ),
                        ),
                        Expanded(
                          flex: 4,
                          child: Center(
                            child: Container(
                              margin: EdgeInsets.all(size.aspectRatio * 50),
                              child: ListView.builder(
                                shrinkWrap: true,
                                itemCount: knowledge.length,
                                itemBuilder: (context, index) => Container(
                                  width: size.width * 0.1,
                                  padding: const EdgeInsets.all(8.0),
                                  margin: EdgeInsets.all(size.aspectRatio * 8),
                                  color: Colors.blue[400],
                                  child: Center(
                                    child: Text(
                                      knowledge[index],
                                      style:
                                          const TextStyle(color: Colors.black),
# ////////////////////////////////////////////////////////////////////////////////////////////
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}
